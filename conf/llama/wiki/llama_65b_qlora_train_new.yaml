hydra:
  run:
    dir: ./

train_file: dataset/sft/
test_file:

# Model
model:
  _target_: models.llama.LlamaForConditionalGeneration.from_pretrained
  vocab_size: 32001
  pad_token_id: 32000
  use_peft: True
  lora_config:
    _recursive_: False
    _target_: models.llama.LoraConfig
    task_type: CAUSAL_LM
    inference_mode: False
    target_modules:
      _target_: models.llama.find_all_linear_names
      bits: 4
    r: 64
    lora_alpha: 16
    lora_dropout: 0.05
  gradient_checkpointing: True
  torch_dtype:
    _target_: general_util.training_utils.return_torch_dtype
    dtype: bfloat16
  quantization_config:
    _target_: transformers.utils.quantization_config.BitsAndBytesConfig
    load_in_4bit: True
    bnb_4bit_compute_dtype:
      _target_: general_util.training_utils.return_torch_dtype
      dtype: bfloat16
    bnb_4bit_use_double_quant: True
    bnb_4bit_quant_type: "nf4"
#  device_map: {"embed_tokens": 0, "": "cpu"}
  device_map:
    _target_: models.llama.return_single_device_map
  load_in_4bit: True
  max_memory: True



# Data loading
read_tensor:
  _target_: data.collators.zh_instruct.TextDatasetCombineV2
  extra_data:
    _target_: data.collators.zh_instruct.WuDaoCorpusDataset
    tokenizer:
    file_path: dataset/wudao/
    file_num: 30

extended_vocab:

# Data collator

collator:
  _target_: data.collators.flan.CombineCollator
  max_seq_length: 2048
  tokenizer: ${model_name_or_path}
  decoder_only: True


# Dataloader
num_workers: 2
prefetch_factor: 2

do_preprocess: False

model_name_or_path: pretrained-models/LLaMA/llama-65b
pretrain:

exp_name: llama.65b.qlora.sft.combine.wudao50.adawm.w8.0602
exp_notes:
output_dir: experiments/${exp_name}  # Fix <pad token id>

do_train: True
evaluate_during_training: False

do_eval: True
eval_sub_path: checkpoint-*

# Training hyper-parameters
per_gpu_train_batch_size: 1
per_gpu_eval_batch_size: 2
#learning_rate: 2e-3
learning_rate: 1e-3
gradient_accumulation_steps: 64
weight_decay: 0.00
adam_epsilon: 1e-6
adam_betas: "(0.9, 0.99)"
max_grad_norm: 0.3
num_train_epochs: 1
max_steps: -1
warmup_proportion: 0
warmup_steps: 50

# Optimizer
optimizer:
use_nvlamb:
bit_training:


logging_steps: 1
#save_best: True
save_best: False
save_steps: 5
eval_steps: -1
ddp_eval: True
no_cuda: False
seed: 42
local_rank: -1
fp16: True
fp16_opt_level: O1
fp16_bfloat16: True

# Prediction config
prediction_cfg:
  metric: "acc"
  measure: 1
  best_checkpoint:
  best_result:
eval_forward_fn:
  _target_: general_util.evaluator.DiscriminatorForwardFn
post_process:

#dist_init:
#  _target_: general_util.dist_utils.setup_slurm_distributed


# fairscale.FullyShardedDP
fairscale_config:
fsdp_config:
#  #  _target_: general_util.fsdp_utils.recursive_initialize
##  _target_: general_util.fsdp_utils.default_initialize
#  #  _target_: general_util.fsdp_utils.default_initialize_v2
##  _target_: general_util.torch_fsdp_utils.torch_fsdp_transformer_init
#  _target_: general_util.torch_fsdp_utils.torch_fsdp_peft_auto_wrap
#  fp16: ${fp16}
#  #  move_grads_to_cpu: False
#  #  move_params_to_cpu: False
#  #  flatten_parameters: False
#  fp16_bfloat16: ${fp16_bfloat16}
##  disable_reshard_on_root: False


# Deepspeed config
ds_cfg:
  train_micro_batch_size_per_gpu: ${per_gpu_train_batch_size}
  gradient_accumulation_steps: ${gradient_accumulation_steps}
  optimizer:
    type: AdamW
    params:
      lr: ${learning_rate}
      betas: [ 0.9, 0.999 ]
      eps: ${adam_epsilon}
      weight_decay: ${weight_decay}
  scheduler:
    type: WarmupLR
    params:
#      total_num_steps:
      warmup_max_lr: ${learning_rate}
      warmup_num_steps:
      warmup_type: linear
  gradient_clipping: ${max_grad_norm}
  #  fp16:
  #    enabled: ${fp16}
  #    initial_scale_power: 12
  bf16:
    enabled: ${fp16}
  #  autotuning:
  #    enabled: true
  #    arg_mappings:
  #      train_micro_batch_size_per_gpu: "per_gpu_train_batch_size"
  #      gradient_accumulation_steps: "gradient_accumulation_steps"
  #      zero_optimization: "ds_cfg.zero_optimization"
  zero_optimization:
    stage: 1
    contiguous_gradients: True
    overlap_comm: True
    reduce_scatter: True
    reduce_bucket_size: 5e8
    allgather_bucket_size: 5e8
#    offload_optimizer:
#      device: cpu
#      pin_memory: True
  #    offload_param:
  #      device: cpu
  #      pin_memory: True
  #  activation_checkpointing:
  #    partition_activations: True
  #    cpu_checkpointing: True
  #    contiguous_memory_optimization: False
  #    number_checkpoints: False
  #    synchronize_checkpoint_boundary: False
  #    profile: False
  steps_per_print: 1024

# Lightseq config
with_lightseq: False


summary_helper:
#  _target_: general_util.tensorboard_helper.SummaryWriterHelper
  _target_: general_util.tensorboard_helper.WandbWriter
  batch_index_or_keys:
  #    "train/pair_value_num": pair_value_num
  #    "train/pair_label_num": pair_label_num
  #    "train/dropped_op_cnt": dropped_op_cnt
  #    "train/invalid_path": invalid_path
  outputs_index_or_keys:
#    "train/mlm_loss": mlm_loss
#    "train/cls_loss": cls_loss
#    "train/cls_acc": cls_acc
#    "train/tagging_loss": tagging_loss
#    "train/path_gen_loss": path_gen_loss

# Temporary variables
n_gpu:
device:
train_batch_size:
eval_batch_size:
world_size:
